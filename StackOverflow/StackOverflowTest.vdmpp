class StackOverflowTest
types
public String = seq of char;
public Sex = <Masculino> | <Feminino>;

instance variables
	s : StackOverflow := new StackOverflow();
	
operations
	private assertTrue: bool ==> ()
	assertTrue(cond) == return
	pre cond;
	
	private testAddUser: () ==> ()
	testAddUser() ==
	(
		dcl newUser:User := s.createUser("Mario", "mario.gustavo@hotmail.com", 23, <Masculino> );
		dcl usersLength:nat := card s.getUsers();
		s.addUser(newUser);
		assertTrue(usersLength + 1 = card s.getUsers());
		assertTrue(newUser in set s.getUsers());
	);
	
	private testAddPost: () ==> ()
	testAddPost() ==
	(
		dcl user:User := new User(1, "User", "email@gmail.com", 47, <Feminino>);
		dcl tagsList:seq of String := ["Tag1", "Tag2", "Tag3"];
		dcl postsLength:nat := card s.getPosts();
		dcl newPost:Post := s.createPost("Title", "Content", user, tagsList);		
		s.addPost(newPost);
		
		assertTrue(postsLength + 1 = card s.getPosts());
		assertTrue(newPost in set s.getPosts());
	);
	
	public static main: () ==> ()
	main() ==
	(
		dcl stack:StackOverflowTest := new StackOverflowTest(); 
		stack.testAddUser();
		stack.testAddPost();
	)
	
end StackOverflowTest