class RegisteredUser is subclass of User
/*
	Defines an authenticated user.
*/

instance variables
	protected id : nat;
	protected name : Utils`String;
	protected age : nat;
	protected email : Utils`String;
	protected sex : Utils`Sex;
	protected reputation : int;
	protected posts : set of Post := {};
	protected comments : set of Comment := {};
	protected username : Utils`String;
	protected password : Utils`String;
	
operations
		public RegisteredUser: nat * Utils`String * Utils`String * nat * Utils`Sex * int * Utils`String * Utils`String ==> RegisteredUser
		RegisteredUser(id1,name1,email1,age1,sex1,reputation1,username1,password1) == 
		(id := id1;
		name := name1;
		email := email1;
		age := age1;
		sex := sex1;
		reputation := reputation1;
		username := username1;
		password := password1;
		return self;)
	post name = name1 and email = email1 and age = age1 and sex = sex1 and reputation = reputation1 and username = username1 and password = password1;
		
		public editUser: Utils`String * Utils`String * nat * Utils`Sex ==> RegisteredUser
		editUser(name1,email1,age1,sex1) == 
		(name := name1;
			email := email1;
			age := age1;
			sex := sex1;
			return self;)
		pre name1 <> "" and email1 <> "" and age1 > 0 and (sex1 = <Masculino> or sex1 = <Feminino>)
		post name = name1 and email = email1 and age = age1 and sex = sex1;
		
	public addReputation: int ==> ()
		addReputation(value) == (reputation := reputation + value;)
		pre value <> 0;
		
	public addPost: Post ==> () 
	addPost(question) == (posts := {question} union posts;);
	
	public addComment: Comment ==> ()
	addComment(comment)  == (comments := {comment} union comments;);
	
	public deleteComment:Comment ==> ()
	deleteComment(comment) == (comments := {comment} \ comments;);
	
	public createPost: Utils`String * Utils`String * set of Utils`String *  nat1 *  nat1 * nat1 ==> Post
		createPost(title,content,tagsList,day,month,year) == 
		(dcl newPost:Post := new Post(title, content, self, tagsList, day, month, year);
		addPost(newPost);
		return newPost;)
	pre canCreatePost = true;
	
	public editPost:Post * Utils`String * Utils`String * set of Utils`String ==> Post 
	editPost(question,title,content,tagsList) == 
	(return question.editPost(title, content, tagsList);)
	pre canEditPost = true and question in set posts;
	
	public removePost:Post ==> ()
	removePost(question) == 
	(posts := {question} \ posts;)
	pre question in set posts;
	
	public createComment:Post * Utils`String * nat1 * nat1 * nat1 ==> Comment 
	createComment(question,content,day,month,year) == 
	(dcl newComment:Comment := new Comment(content, self, day, month, year);
		question.addComment(newComment);
		addComment(newComment);
		return newComment;)
	pre canAddComment = true;
	
	public editComment:Comment * Utils`String ==> Comment
	editComment(comment,content) == (return comment.editComment(content);	)
	pre canEditComment = true and comment in set comments;
	
	public removeComment:Post * Comment ==> ()
	removeComment(question,comment) == 
	(question.removeComment(comment);
		deleteComment(comment);)
	pre comment in set comments;
	
	/* Get Operations */
	public getId: () ==> int
		getId() == (return id;)
		pre (id > 0)
		post RESULT = id;
		
	public getName: () ==> Utils`String
		getName() == (return name;)
		post RESULT = name;
		
	public getAge: () ==> nat
		getAge() == (return age;)
		pre (age > 1)
		post RESULT = age;
		
	public getEmail: () ==> Utils`String
		getEmail() == (return email;)
		post RESULT = email;
		
	public getSex: () ==> Utils`Sex
		getSex() == (return sex;)
		pre sex = <Masculino> or sex = <Feminino>
		post RESULT = sex;
		
	public getReputation: () ==> int
		getReputation() == (return reputation;)
		post RESULT = reputation;
	
	public getPosts: () ==> set of Post
		getPosts() == (return posts;)
		post RESULT = posts;
		
	public getComments: () ==> set of Comment
		getComments() == (return comments;)
		post RESULT = comments;
		
	public getUsername: () ==> Utils`String
		getUsername() == (return username;)
		post RESULT = username;
		
	public getPassword: () ==> Utils`String
		getPassword() == (return password;)
		post RESULT = password;
			
end RegisteredUser