class RegisteredUser is subclass of User
types
public String = seq of char;
public Sex = <Masculino> | <Feminino>;
instance variables
	protected id : nat;
	protected name : String;
	protected age : nat;
	protected email : String;
	protected sex : Sex;
	protected reputation : int;
	protected posts : set of Post := {};
	protected comments : set of Comment := {};
	protected username : String;
	protected password : String;
operations
		public RegisteredUser(id1:nat, name1:String, email1:String, age1:nat, sex1:Sex, reputation1:int, username1:String, password1:String) res: RegisteredUser == (	
		id := id1;
		name := name1;
		email := email1;
		age := age1;
		sex := sex1;
		reputation := reputation1;
		username := username1;
		password := password1;
	)
	post res.name = name1 and
		res.email = email1 and
		res.age = age1 and
		res.sex = sex1 and
		res.reputation = reputation1 and 
		res.username = username1 and
		res.password = password1;
		
		public editUser(name1:String, email1:String, age1:nat, sex1:Sex) res:RegisteredUser == (
			name := name1;
			email := email1;
			age := age1;
			sex := sex1;
			return self;
		)
		pre name1 <> "" and email1 <> "" and age1 > 0 and sex1 <> nil
		post res.name = name1 and
			res.email = email1 and
			res.age = age1 and
			res.sex = sex1;
	
	public getId: () ==> nat
		getId() == return id
		pre id > 0
		post RESULT = id;
		
	public getName: () ==> String
		getName() == return name
		post RESULT = name;
		
	public getAge: () ==> nat
		getAge() == return age
		pre age > 0
		post RESULT = age;
		
	public getEmail: () ==> String
		getEmail() == return email
		post RESULT = email;
		
	public getSex: () ==> Sex
		getSex() == return sex
		pre sex <> nil
		post RESULT = sex;
		
	public getReputation: () ==> int
		getReputation() == return reputation
		post RESULT = reputation;
	
	public addReputation: int ==> ()
		addReputation(value) == reputation := reputation + value
		pre value <> 0;
	
	public getPosts: () ==> set of Post
		getPosts() == return posts
		post RESULT = posts;
		
					public getComments: () ==> set of Comment
		getComments() == return comments
		post RESULT = comments;
		
	public getUsername: () ==> String
		getUsername() == return username
		post RESULT = username;
		
	public getPassword: () ==> String
		getPassword() == return password
		post RESULT = password;
		
	public addPost(question:Post) == (
		posts := {question} union posts;
	);
	
	public addComment(comment:Comment) == (
		comments := {comment} union comments;
	);
	
	public deleteComment(comment:Comment) == (
		comments := {comment} \ comments;
	);
	
	public createPost(title:String, content:String, tagsList:set of String, day: nat1, month: nat1, year: nat1) res:Post == (
		dcl newPost:Post := new Post(title, content, self, tagsList, day, month, year);
		addPost(newPost);
		return newPost;
	)
	pre canCreatePost = true;
	
	public editPost(question:Post, title:String, content:String, tagsList:set of String) res:Post == (
		return question.editPost(title, content, tagsList);
	)
	pre canEditPost = true and question in set posts;
	
	public removePost(question:Post) == (
		posts := {question} \ posts;
	)
	pre question in set posts;
	
	public createComment(question:Post, content:String, day: nat1, month: nat1, year: nat1) res:Comment == (
		dcl newComment:Comment := new Comment(content, self, day, month, year);
		question.addComment(newComment);
		addComment(newComment);
		return newComment;
	)
	pre canAddComment = true;
	
	public editComment(comment:Comment, content:String) res:Comment == (
		return comment.editComment(content);
	)
	pre canEditComment = true and comment in set comments;
	
	public removeComment(question:Post, comment:Comment) == (
		question.removeComment(comment);
		deleteComment(comment);
	)
	pre comment in set comments;
			
end RegisteredUser