class User
instance variables
protected canRate : bool;
protected canCreatePost : bool;
protected canEditPost : bool;
protected canRemovePost : bool;
protected canAddComment : bool;
protected canEditComment : bool;
protected canRemoveComment : bool;
protected canBanUsers : bool;
protected canUnbanUsers : bool;
protected banned : Utils`BanState;
operations
		public User:() ==> User
		User() == (	
		canRate := false;
		canCreatePost := false;
		canEditPost := false;
		canRemovePost := false;
		canAddComment := false;
		canEditComment := false;
		canRemoveComment := false;
		canBanUsers := false;
		canUnbanUsers := false;
		banned := <Unbanned>;
	)
	post canRate = false and
		canCreatePost = false and
		canEditPost = false and
		canRemovePost = false and
		canAddComment = false and
		canEditComment = false and
		canRemoveComment = false and
		canBanUsers = false and
		canUnbanUsers = false and
		banned = <Unbanned>;
		
public getCanRate: () ==> bool
		getCanRate() == (return canRate;)
		post RESULT = canRate;

public getCanCreatePost: () ==> bool
		getCanCreatePost() == (return canCreatePost;)
		post RESULT = canCreatePost;
		
public getCanEditPost: () ==> bool
		getCanEditPost() == (return canEditPost;)
		post RESULT = canEditPost;
		
public getCanRemovePost: () ==> bool
		getCanRemovePost() == (return canRemovePost;)
		post RESULT = canRemovePost;
		
public getCanAddComment: () ==> bool
		getCanAddComment() == (return canAddComment;)
		post RESULT = canAddComment;
		
public getCanEditComment: () ==> bool
		getCanEditComment() == (return canEditComment;)
		post RESULT = canEditComment;
		
public getCanRemoveComment: () ==> bool
		getCanRemoveComment() == (return canRemoveComment;)
		post RESULT = canRemoveComment;
		
public getCanBanUsers: () ==> bool
		getCanBanUsers() == (return canBanUsers;)
		post RESULT = canBanUsers;
		
public getCanUnbanUsers: () ==> bool
		getCanUnbanUsers() == (return canUnbanUsers;)
		post RESULT = canUnbanUsers;
		
public getBanState: () ==> Utils`BanState
		getBanState() == (return banned;)
		pre banned <> nil
		post RESULT = banned;
		
	public setBanState:Utils`BanState ==> ()
	setBanState(newBanState) == (
	banned := newBanState;
	) 
	pre banned <> newBanState
	post banned = newBanState;

	public getEmail: () ==> Utils`String
		getEmail() == (return "";)
		post RESULT = "";
		
	public getSex: () ==> Utils`Sex
		getSex() == (return <Masculino>;)
		post RESULT = <Masculino>;	

	public getName: () ==> Utils`String
		getName() == (return "";)
		post RESULT = "";
	
		public getAge: () ==> nat
		getAge() == (return 1;)
		post RESULT = 1;
		
	public getUsername: () ==> Utils`String
		getUsername() == (return "";)
		post RESULT = "";
		
	public getPassword: () ==> Utils`String
		getPassword() == (return "";)
		post RESULT = "";

public editUser: Utils`String * Utils`String * nat * Utils`Sex ==> User
editUser(name1,email1,age1,sex1) == (
return self;
) pre name1 <> "" and email1 <> "" and age1 > 0 and sex1 <> nil;


end User